void osgViewerQt::receivelogstring(const QString& str)
{
	myTextEdit->setText("Ready");
	QScrollBar *sb = myTextEdit->verticalScrollBar();
	getflag(); 


	switch (flag) {
	
	case 4U:
	case 0010:
	case 0110:
	case '4':
		std::cout << m_string << endl;
		break;
	case '12':
		myTextEdit->append(str);
		std::cout << m_string << endl;
		break;
	case '8':
		myTextEdit->append(str);
		break;
	//case 1010:
	//case 1110:
	default: std::cout << m_string << endl;
	}
	sb->setValue(sb->maximum());
}



myTextEdit->append(str);
	QScrollBar *sb = myTextEdit->verticalScrollBar();
	sb->setValue(sb->maximum());
  
 enum MASK : unsigned char{
			RESTORE = 1,
			LOG = 1<<1,
			CONSOLE = 1<<2,
			QTWIDGET = 1<<3,
			ALL = -1,
			NONE = 0
		};
		
		MASK m_loggerMask = MASK::ALL;
		unsigned char flag;

		void enableBitMask(MASK newMask);
		MASK getBitMask()const;

		bool isMaskSet(MASK mask)const;
